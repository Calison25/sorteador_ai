{"ast":null,"code":"var _jsxFileName = \"/home/calison/repositories/sorteador_ai/frontend/src/components/Sorteador.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Switch, FormControlLabel, makeStyles } from '@material-ui/core';\nimport { sortearNumeros } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  result: {\n    marginTop: theme.spacing(2),\n    fontSize: '2rem'\n  }\n}));\nconst Sorteador = () => {\n  _s();\n  const classes = useStyles();\n  const [quantidade, setQuantidade] = useState(2);\n  const [min, setMin] = useState(1);\n  const [max, setMax] = useState(100);\n  const [naoRepetir, setNaoRepetir] = useState(true);\n  const [ordenar, setOrdenar] = useState(false);\n  const [resultado, setResultado] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await sortearNumeros(quantidade, min, max, naoRepetir, ordenar);\n      setResultado(response.data.resultado);\n    } catch (error) {\n      console.error('Erro ao sortear números:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sorteador de n\\xFAmeros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"Quantidade de n\\xFAmeros\",\n          type: \"number\",\n          value: quantidade,\n          onChange: e => setQuantidade(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"N\\xFAmero m\\xEDnimo\",\n          type: \"number\",\n          value: min,\n          onChange: e => setMin(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          label: \"N\\xFAmero m\\xE1ximo\",\n          type: \"number\",\n          value: max,\n          onChange: e => setMax(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: naoRepetir,\n            onChange: e => setNaoRepetir(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 22\n          }, this),\n          label: \"N\\xE3o repetir n\\xFAmero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: ordenar,\n            onChange: e => setOrdenar(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 22\n          }, this),\n          label: \"Ordenar n\\xFAmeros em ordem crescente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sortear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), resultado.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.result,\n        children: [\"Resultado: \", resultado.join(' e ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Sorteador, \"sOmXDSWrJoJc/2d2N3L6EP72fQc=\", false, function () {\n  return [useStyles];\n});\n_c = Sorteador;\nexport default Sorteador;\nvar _c;\n$RefreshReg$(_c, \"Sorteador\");","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Switch","FormControlLabel","makeStyles","sortearNumeros","jsxDEV","_jsxDEV","useStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","result","fontSize","Sorteador","_s","classes","quantidade","setQuantidade","min","setMin","max","setMax","naoRepetir","setNaoRepetir","ordenar","setOrdenar","resultado","setResultado","handleSubmit","e","preventDefault","response","data","error","console","component","maxWidth","children","className","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","required","fullWidth","label","type","value","onChange","Number","target","control","checked","color","length","join","_c","$RefreshReg$"],"sources":["/home/calison/repositories/sorteador_ai/frontend/src/components/Sorteador.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Switch,\n  FormControlLabel,\n  makeStyles,\n} from '@material-ui/core';\nimport { sortearNumeros } from '../services/api';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  result: {\n    marginTop: theme.spacing(2),\n    fontSize: '2rem',\n  },\n}));\n\nconst Sorteador: React.FC = () => {\n  const classes = useStyles();\n  const [quantidade, setQuantidade] = useState(2);\n  const [min, setMin] = useState(1);\n  const [max, setMax] = useState(100);\n  const [naoRepetir, setNaoRepetir] = useState(true);\n  const [ordenar, setOrdenar] = useState(false);\n  const [resultado, setResultado] = useState<number[]>([]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await sortearNumeros(quantidade, min, max, naoRepetir, ordenar);\n      setResultado(response.data.resultado);\n    } catch (error) {\n      console.error('Erro ao sortear números:', error);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.root}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sorteador de números\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Quantidade de números\"\n            type=\"number\"\n            value={quantidade}\n            onChange={(e) => setQuantidade(Number(e.target.value))}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Número mínimo\"\n            type=\"number\"\n            value={min}\n            onChange={(e) => setMin(Number(e.target.value))}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Número máximo\"\n            type=\"number\"\n            value={max}\n            onChange={(e) => setMax(Number(e.target.value))}\n          />\n          <FormControlLabel\n            control={<Switch checked={naoRepetir} onChange={(e) => setNaoRepetir(e.target.checked)} />}\n            label=\"Não repetir número\"\n          />\n          <FormControlLabel\n            control={<Switch checked={ordenar} onChange={(e) => setOrdenar(e.target.checked)} />}\n            label=\"Ordenar números em ordem crescente\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sortear\n          </Button>\n        </form>\n        {resultado.length > 0 && (\n          <Typography className={classes.result}>\n            Resultado: {resultado.join(' e ')}\n          </Typography>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Sorteador;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}